{"version":3,"sources":["components/CanvasColorButton.js","components/Canvas.js","App.js","index.js"],"names":["CanvasColorButton","state","displayColorPicker","color","r","g","b","a","handleClick","_this","setState","handleClose","props","setCanvasColor","handleChange","rgb","console","log","this","colorFromStorage","_this$state","styles","reactCSS","default","width","height","borderRadius","background","concat","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","top","left","cover","right","bottom","react_default","createElement","style","onClick","onMouseDown","react_color_lib","onChange","Component","Canvas","lines","Immutable","List","isDrawing","canvasColor","JSON","parse","localStorage","getItem","retrieveDataFromLocalStorage","linesFromStorage","idx","length","line","newLineWithImmutablePoints","jdx","point","immutablePoint","Map","x","y","push","immutableLine","saveLinesToLocalStorage","setItem","stringify","handleMouseMove","mouseEvent","relativeCoordinatesForEvent","prevState","updateIn","size","handleMouseUp","handleMouseDown","button","boundingRect","refs","canvas","getBoundingClientRect","clientX","clientY","eraseCanvas","removeItem","dataFromColorButton","_this2","document","addEventListener","e","preventDefault","_this3","removeEventListener","classes","className","ref","onPointerDown","onPointerMove","backgroundColor","Canvas_Drawing","Button_default","variant","float","components_CanvasColorButton","withStyles","theme","margin","spacing","unit","Drawing","_ref","map","index","Canvas_DrawingLine","key","DrawingLine","_ref2","pathData","get","join","d","App","components_Canvas","startApp","ReactDOM","render","src_App_0","getElementById","window","cordova"],"mappings":"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","file":"static/js/main.f5f1c5c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nclass CanvasColorButton extends Component {\n  state = {\n    displayColorPicker: false,\n    color: {\n      r: '255',\n      g: '255',\n      b: '255',\n      a: '1',\n    },\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    const { colorFromStorage } = this.props;\n    this.setState({ color: colorFromStorage });\n  }\n\n  handleClick = () => {\n    const { displayColorPicker } = this.state;\n    this.setState({ displayColorPicker: !displayColorPicker });\n  };\n\n  handleClose = () => {\n    const { color } = this.state;\n    this.setState({ displayColorPicker: false }, () => this.props.setCanvasColor(color));\n  };\n\n  handleChange = color => {\n    this.setState({ color: color.rgb });\n  };\n\n  render() {\n    const { color, displayColorPicker } = this.state;\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n          top: '45%',\n          left: '10%'\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color}/>\n        </div>\n        {displayColorPicker ? <div style={styles.popover}>\n          <div style={styles.cover} onMouseDown={this.handleClose}/>\n          <SketchPicker color={color} onChange={this.handleChange}/>\n        </div> : null}\n\n      </div>\n    );\n  }\n}\n\nexport default CanvasColorButton;","import React, { Component } from 'react';\nimport Immutable from 'immutable';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport CanvasColorButton from './CanvasColorButton';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  }\n});\n\nclass Canvas extends Component {\n  state = {\n    lines: new Immutable.List(),\n    isDrawing: false,\n    canvasColor: JSON.parse(localStorage.getItem('canvasColor')) || {\n      r: '255',\n      g: '255',\n      b: '255',\n      a: '1',\n    },\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchend', e => {\n      e.preventDefault();\n      this.handleMouseUp();\n    }, false);\n\n    document.addEventListener('mouseup', this.handleMouseUp);\n\n    this.retrieveDataFromLocalStorage();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchend', e => {\n      e.preventDefault();\n      this.handleMouseUp();\n    }, false);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  retrieveDataFromLocalStorage = () => {\n    if (localStorage.getItem('lines') !== 'undefined' && localStorage.getItem('lines')) {\n      const linesFromStorage = JSON.parse(localStorage.getItem('lines'));\n      let lines = [];\n      for (let idx = 0; idx < linesFromStorage.length; idx++) {\n        const line = linesFromStorage[idx];\n        const newLineWithImmutablePoints = [];\n\n        for (let jdx = 0; jdx < line.length; jdx++) {\n          const point = line[jdx];\n          const immutablePoint = new Immutable.Map({\n            x: point['x'],\n            y: point['y']\n          });\n\n          newLineWithImmutablePoints.push(immutablePoint);\n\n        }\n        const immutableLine = new Immutable.List(newLineWithImmutablePoints);\n        lines.push(immutableLine);\n      }\n\n      this.setState({ lines: new Immutable.List(lines) });\n    }\n  };\n\n  saveLinesToLocalStorage = () => {\n    const { lines } = this.state;\n    localStorage.setItem('lines', JSON.stringify(lines));\n  };\n\n  handleMouseMove = mouseEvent => {\n    if (!this.state.isDrawing) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState(prevState => ({\n      lines: prevState.lines.updateIn([prevState.lines.size - 1], line => line.push(point))\n    }), () => this.saveLinesToLocalStorage());\n  };\n\n  handleMouseUp = () => {\n    this.setState({ isDrawing: false });\n  };\n\n  handleMouseDown = mouseEvent => {\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n\n    const point = this.relativeCoordinatesForEvent(mouseEvent);\n\n    this.setState(prevState => ({\n      lines: prevState.lines.push(new Immutable.List([point])),\n      isDrawing: true\n    }), () => this.saveLinesToLocalStorage());\n  };\n\n  relativeCoordinatesForEvent = mouseEvent => {\n    const boundingRect = this.refs.canvas.getBoundingClientRect();\n    return new Immutable.Map({\n      x: mouseEvent.clientX - boundingRect.left,\n      y: mouseEvent.clientY - boundingRect.top,\n    });\n  };\n\n  eraseCanvas = () => {\n    this.setState({ lines: new Immutable.List() }, () => {\n      localStorage.removeItem('lines');\n    });\n  };\n\n  setCanvasColor = dataFromColorButton => {\n    this.setState({ canvasColor: dataFromColorButton },\n      () => localStorage.setItem('canvasColor', JSON.stringify(dataFromColorButton)));\n  };\n\n  render() {\n    const { lines, canvasColor } = this.state;\n    const { classes } = this.props;\n    return (\n      <div\n        className=\"canvas\"\n        ref=\"canvas\"\n        onPointerDown={this.handleMouseDown}\n        onPointerMove={this.handleMouseMove}\n        style={{ backgroundColor: `rgba(${canvasColor.r}, ${canvasColor.g}, ${canvasColor.b}, ${canvasColor.a})` }}\n      >\n\n        <Drawing lines={lines}/>\n        <div>\n          <Button variant=\"outlined\" className={classes.button} onMouseDown={this.eraseCanvas}\n                  style={{ display: 'inline', float: 'left' }}>\n            Erase\n          </Button>\n          <div className=\"colorButton\">\n            <p className=\"label\">Canvas Color</p>\n            <CanvasColorButton setCanvasColor={this.setCanvasColor} colorFromStorage={canvasColor} className=\"colorPicker\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Canvas);\n\n\nconst Drawing = ({ lines }) => {\n  return (\n    <svg className=\"drawing\">\n      {lines.map((line, index) => (\n        <DrawingLine key={index} line={line}/>\n      ))}\n    </svg>\n  );\n};\n\nconst DrawingLine = ({ line }) => {\n  const pathData = 'M ' +\n    line.map(point => {\n      return `${point.get('x')} ${point.get('y')}`;\n    }).join(' L ');\n\n  return <path className=\"path\" d={pathData}/>;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './components/Canvas';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Picasso: A Whiteboard App</h1>\n        <Canvas/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst startApp = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif(window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}"],"sourceRoot":""}